<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-04T16:37:17 IST" name="N11 Test Suite" finished-at="2022-01-04T16:41:08 IST" duration-ms="231065">
    <groups>
    </groups>
    <test started-at="2022-01-04T16:37:17 IST" name="LoginTest" finished-at="2022-01-04T16:41:08 IST" duration-ms="231065">
      <class name="tests.ClientLogIn">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:37:17 IST" name="setup" finished-at="2022-01-04T16:37:30 IST" duration-ms="12844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_InvalidNumber()[pri:0, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:37:30 IST" name="TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_InvalidNumber" description="Verify that client should get the error message when using invalid number" finished-at="2022-01-04T16:37:55 IST" duration-ms="24585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_InvalidNumber -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_CancelButton()[pri:1, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:37:55 IST" name="TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_CancelButton" description="Verify that client should able to cancel login onclick cancel icon" finished-at="2022-01-04T16:38:17 IST" duration-ms="22445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_CancelButton -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_ToLogin_Through_PhoneNumber()[pri:2, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:38:17 IST" name="TC_Positive_Verify_that_Client_ShouldAble_ToLogin_Through_PhoneNumber" description="Verify that client should able to login through phone number" finished-at="2022-01-04T16:38:32 IST" duration-ms="15240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_ToLogin_Through_PhoneNumber -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_Changethe_CountryCode()[pri:3, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:38:32 IST" name="TC_Positive_Verify_that_Client_ShouldAble_Changethe_CountryCode" description="Verify that client should able to change the country code" finished-at="2022-01-04T16:38:46 IST" duration-ms="13785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_Changethe_CountryCode -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_ToResend_OTPThrough_PhoneNumber()[pri:4, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:38:46 IST" name="TC_Positive_Verify_that_Client_ShouldAble_ToResend_OTPThrough_PhoneNumber" description="Verify that client should able to resend OTP through phone number" finished-at="2022-01-04T16:40:16 IST" duration-ms="89344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_ToResend_OTPThrough_PhoneNumber -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseof_Emptyfield()[pri:6, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:16 IST" name="TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseof_Emptyfield" description="Verify that client should get error message in case of empty field" finished-at="2022-01-04T16:40:23 IST" duration-ms="7181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseof_Emptyfield -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseofEmail_Emptyfield()[pri:7, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:23 IST" name="TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseofEmail_Emptyfield" description="Verify that client should get error message in case of email empty field" finished-at="2022-01-04T16:40:29 IST" duration-ms="5988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldGet_ErrorMessage_inCaseofEmail_Emptyfield -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_NonRegisteredEmail()[pri:8, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:29 IST" name="TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_NonRegisteredEmail" description="Verify that client should get the error message when using non-registered email" finished-at="2022-01-04T16:40:34 IST" duration-ms="4938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_Toget_ErrorMessage_onUsing_NonRegisteredEmail -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldGet_Error_OnUsingInvalidEmail()[pri:9, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:34 IST" name="TC_Positive_Verify_that_Client_ShouldGet_Error_OnUsingInvalidEmail" description="Verify that client should get error on using invalid email" finished-at="2022-01-04T16:40:39 IST" duration-ms="5507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldGet_Error_OnUsingInvalidEmail -->
        <test-method signature="TC_Positive_Verify_that_Client_Should_getValidMessage_onUsing_RegisteredEmail()[pri:10, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:39 IST" name="TC_Positive_Verify_that_Client_Should_getValidMessage_onUsing_RegisteredEmail" description="Verify that client should get the valid message when using registered email" finished-at="2022-01-04T16:40:45 IST" duration-ms="5672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_Should_getValidMessage_onUsing_RegisteredEmail -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_EmailCancelButton()[pri:11, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:40:45 IST" name="TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_EmailCancelButton" description="Verify that client should able to cancel login onclick cancel icon" finished-at="2022-01-04T16:41:04 IST" duration-ms="18641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_cancel_LoginOnclick_EmailCancelButton -->
        <test-method signature="TC_Positive_Verify_that_Client_ShouldAble_LoginOnclick_LinkSentTo_Email_forVerification()[pri:12, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:41:04 IST" name="TC_Positive_Verify_that_Client_ShouldAble_LoginOnclick_LinkSentTo_Email_forVerification" description="Verify that client should able to login onclick verification link sent to registered email" finished-at="2022-01-04T16:41:08 IST" duration-ms="4460" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(text(),'Suburban Jungle Team')]"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-RQ3L8BF', ip: '192.168.1.11', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.18 (b8887b3d1742a..., userDataDir: C:\Users\khans\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54439}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e8d5a6ffd2b28efee7c1ef28e335cca7
*** Element info: {Using=xpath, value=//*[contains(text(),'Suburban Jungle Team')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(text(),'Suburban Jungle Team')]"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-RQ3L8BF', ip: '192.168.1.11', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.18 (b8887b3d1742a..., userDataDir: C:\Users\khans\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54439}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e8d5a6ffd2b28efee7c1ef28e335cca7
*** Element info: {Using=xpath, value=//*[contains(text(),'Suburban Jungle Team')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at pages.PageSignIn.emailLinkVerification(PageSignIn.java:157)
at tests.ClientLogIn.TC_Positive_Verify_that_Client_ShouldAble_LoginOnclick_LinkSentTo_Email_forVerification(ClientLogIn.java:391)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_Positive_Verify_that_Client_ShouldAble_LoginOnclick_LinkSentTo_Email_forVerification -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ClientLogIn@409bf450]" started-at="2022-01-04T16:41:08 IST" name="teardown" finished-at="2022-01-04T16:41:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.ClientLogIn -->
    </test> <!-- LoginTest -->
  </suite> <!-- N11 Test Suite -->
</testng-results>
